diff --git a/ModelarDB-versions/ModelarDB/crates/modelardb_compression/src/compression.rs b/ModelarDB-versions/ModelarDB/crates/modelardb_compression/src/compression.rs
index 62c7906..989e8ff 100644
--- a/ModelarDB-versions/ModelarDB/crates/modelardb_compression/src/compression.rs
+++ b/ModelarDB-versions/ModelarDB/crates/modelardb_compression/src/compression.rs
@@ -80,7 +80,7 @@ pub fn try_compress(
 
         // The model will only be stored as part of a compressed segment if it uses less storage
         // space per value than the uncompressed values it represents.
-        if model.bytes_per_value <= models::VALUE_SIZE_IN_BYTES as f32 {
+        // if model.bytes_per_value <= models::VALUE_SIZE_IN_BYTES as f32 {
             // Flush the previous model and any residual value if either exists.
             if current_start_index > 0 {
                 store_compressed_segments_with_model_and_or_residuals(
@@ -101,11 +101,11 @@ pub fn try_compress(
             // few residual values that may exist between them can be stored as part of the segment
             // with previous_model instead of as a separate segment.
             previous_model = Some(model);
-        } else {
-            // The potentially lossy models could not efficiently encode the sub-sequence starting
-            // at current_start_index, so residual values will instead be compressed using Gorilla.
-            current_start_index += 1;
-        }
+        // } else {
+        //     // The potentially lossy models could not efficiently encode the sub-sequence starting
+        //     // at current_start_index, so residual values will instead be compressed using Gorilla.
+        //     current_start_index += 1;
+        // }
     }
 
     store_compressed_segments_with_model_and_or_residuals(
